#!/bin/bash

create_pid_file()
{
	touch $PID
}

delete_pid_file()
{
	rm $PID
}

exit_if_pid_file_exists()
{
	if [ -f $PID ]
	then
		echo "PID file exists. Abort."
		exit 1
	fi
}

# Default configs.

SSH_USER=pi-backup
SSH_PORT=22
SSH_KEY=$HOME/.ssh/pi_backup_rsa
BWLIMIT=5000
BACKUP_NAME=$(hostname)
PID=/tmp/pi-backup.pid

# Load configs overrides.

SCRIPT_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

. $SCRIPT_DIR/config

# Backup commands.

trap "echo Signal trap. Abort!; delete_pid_file; exit 1;" SIGINT SIGTERM

SSH_COMMAND="ssh -i $SSH_KEY -p $SSH_PORT"

RSYNC_OPTS="--progress --verbose -az --bwlimit=$BWLIMIT"

# Full path on destination machine.
DEST_DIR=/bak/$BACKUP_NAME

LOG=$SCRIPT_DIR/pi-backup.log

exit_if_pid_file_exists

create_pid_file

DEST=$SSH_USER@$ADDRESS:$DEST_DIR

if (! $SSH_COMMAND $SSH_USER@$ADDRESS "[ -d $DEST_DIR ]")
then
	echo "Backup destination does not exist. Abort."
	exit 1
fi

rsync $RSYNC_OPTS -e "$SSH_COMMAND" $EXTRA_OPTS ${INCLUDES[@]} ${EXCLUDES[@]} $SOURCE $DEST/

date >> $LOG

delete_pid_file

